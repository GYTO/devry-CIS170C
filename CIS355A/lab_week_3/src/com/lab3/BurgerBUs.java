/**************************************************** 
Program Name: BurgerBUs.java 
Programmer's Name: Roman Kovtun 
Program Description: Calculate the order and log it to the textarea 
***********************************************************/

package com.lab3;

import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Roman Kovtun
 */
public class BurgerBUs extends javax.swing.JFrame {

    // Class level reference
    private double orderTotal;
    
    /**
     * Creates new form BurgerBUs
     */
    public BurgerBUs() {
        initComponents();
        
        // set value AFTER builds the form
        orderTotal = 0.0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgBurgers = new javax.swing.ButtonGroup();
        rdoSingleBurger = new javax.swing.JRadioButton();
        rdoDoubleBurger = new javax.swing.JRadioButton();
        chkAddCheese = new javax.swing.JCheckBox();
        chkAddBacon = new javax.swing.JCheckBox();
        chkMeal = new javax.swing.JCheckBox();
        lblItemPrice = new javax.swing.JLabel();
        txtItemPrice = new javax.swing.JTextField();
        lblMessage = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaOutput = new javax.swing.JTextArea();
        lblQuantity = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        lblOrderTotal = new javax.swing.JLabel();
        txtOrderTotal = new javax.swing.JTextField();
        jmbMainMenu = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mniExit = new javax.swing.JMenuItem();
        mnuOrder = new javax.swing.JMenu();
        mniAddToOrder = new javax.swing.JMenuItem();
        mniClear = new javax.swing.JMenuItem();
        mniNewOrder = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Burger Barn");

        btgBurgers.add(rdoSingleBurger);
        rdoSingleBurger.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        rdoSingleBurger.setText("Single Burger");
        rdoSingleBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoSingleBurgerActionPerformed(evt);
            }
        });

        btgBurgers.add(rdoDoubleBurger);
        rdoDoubleBurger.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        rdoDoubleBurger.setText("Double Burger");
        rdoDoubleBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDoubleBurgerActionPerformed(evt);
            }
        });

        chkAddCheese.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        chkAddCheese.setText("Add Cheese");
        chkAddCheese.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAddCheeseActionPerformed(evt);
            }
        });

        chkAddBacon.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        chkAddBacon.setText("Add Bacon");
        chkAddBacon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAddBaconActionPerformed(evt);
            }
        });

        chkMeal.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        chkMeal.setText("Make it a Meal");
        chkMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMealActionPerformed(evt);
            }
        });

        lblItemPrice.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblItemPrice.setLabelFor(txtItemPrice);
        lblItemPrice.setText("Item Price:");

        txtItemPrice.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtItemPrice.setText("0");

        lblMessage.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        lblMessage.setText("Your Order");

        txaOutput.setEditable(false);
        txaOutput.setColumns(20);
        txaOutput.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        txaOutput.setRows(5);
        jScrollPane1.setViewportView(txaOutput);

        lblQuantity.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblQuantity.setLabelFor(txtItemPrice);
        lblQuantity.setText("Quantity:");

        txtQuantity.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtQuantity.setText("1");
        txtQuantity.setToolTipText("");

        lblOrderTotal.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblOrderTotal.setLabelFor(txtItemPrice);
        lblOrderTotal.setText("Order Total: ");

        txtOrderTotal.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtOrderTotal.setText("0");

        mnuFile.setText("File");

        mniExit.setText("Exit");
        mniExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniExitActionPerformed(evt);
            }
        });
        mnuFile.add(mniExit);

        jmbMainMenu.add(mnuFile);

        mnuOrder.setText("Order");
        mnuOrder.setToolTipText("");

        mniAddToOrder.setText("Add to Order");
        mniAddToOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAddToOrderActionPerformed(evt);
            }
        });
        mnuOrder.add(mniAddToOrder);

        mniClear.setText("Clear for Next Item");
        mniClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniClearActionPerformed(evt);
            }
        });
        mnuOrder.add(mniClear);

        mniNewOrder.setText("New Order");
        mniNewOrder.setToolTipText("");
        mniNewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNewOrderActionPerformed(evt);
            }
        });
        mnuOrder.add(mniNewOrder);

        jmbMainMenu.add(mnuOrder);

        setJMenuBar(jmbMainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdoSingleBurger)
                    .addComponent(rdoDoubleBurger)
                    .addComponent(chkAddCheese)
                    .addComponent(chkAddBacon)
                    .addComponent(chkMeal)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblItemPrice)
                        .addGap(18, 18, 18)
                        .addComponent(txtItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblMessage)
                        .addGap(136, 136, 136))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblOrderTotal)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtOrderTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblQuantity)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoSingleBurger)
                            .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoDoubleBurger)
                        .addGap(49, 49, 49)
                        .addComponent(chkAddCheese)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkAddBacon)
                        .addGap(43, 43, 43)
                        .addComponent(chkMeal))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblItemPrice)
                    .addComponent(txtItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQuantity)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrderTotal)
                    .addComponent(txtOrderTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniExitActionPerformed
        // exit the application
        System.exit(0);
    }//GEN-LAST:event_mniExitActionPerformed

    private void mniAddToOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAddToOrderActionPerformed
        // add the current selection to the grad total order
        String output = "";
        
        // add quantity to out pul line
        output += txtQuantity.getText() + " ";
        
        // check what type of burger selected
        if(rdoSingleBurger.isSelected())
            output += "single";
        else
            output += "double";
        
        // add cheese, becon, and/or meal
        if(chkAddCheese.isSelected())
            output += ", cheese";
        
        if(chkAddBacon.isSelected())
            output += ", bacon";
        
        if(chkMeal.isSelected())
            output += ", meal";
        
        // add the item price 
        double itemPrice = Double.parseDouble(txtItemPrice.getText());
        DecimalFormat fmt = new DecimalFormat("0.00");
        output += " at " + fmt.format(itemPrice) + " each\n";
        txaOutput.append(output);
        
        // add item price to order total
        int quantity = Integer.parseInt(txtQuantity.getText());
        double itemTotal = itemPrice * quantity;
        orderTotal += itemTotal;
        txtOrderTotal.setText(fmt.format(orderTotal));
        
    }//GEN-LAST:event_mniAddToOrderActionPerformed

    private void mniClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniClearActionPerformed
        // clear the input fields to prepare for the next item
        // clear inputs
        txtQuantity.setText("1");
        txtItemPrice.setText("0");
        
        // clear checkboxes and radio groups
        chkAddCheese.setSelected(false);
        chkAddBacon.setSelected(false);
        chkMeal.setSelected(false);
        btgBurgers.clearSelection();
            
    }//GEN-LAST:event_mniClearActionPerformed

    private void mniNewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNewOrderActionPerformed
        // reset everything  for a brand new order
        // clear the order total
        orderTotal = 0.0;
        
        // clear inputs
        txtQuantity.setText("1");
        txtItemPrice.setText("0");
        txtOrderTotal.setText("0");
        txaOutput.setText("");
        
        // clear checkboxes and radio groups
        chkAddCheese.setSelected(false);
        chkAddBacon.setSelected(false);
        chkMeal.setSelected(false);
        btgBurgers.clearSelection();
        
    }//GEN-LAST:event_mniNewOrderActionPerformed

    private void rdoSingleBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoSingleBurgerActionPerformed
        // User chooses "Single Burger"
        updateItemPrice();
    }//GEN-LAST:event_rdoSingleBurgerActionPerformed

    private void rdoDoubleBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDoubleBurgerActionPerformed
        // User chooses "Double Burger"
        updateItemPrice();
    }//GEN-LAST:event_rdoDoubleBurgerActionPerformed

    private void chkAddCheeseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAddCheeseActionPerformed
        // Add Cheese cost
        updateItemPrice();
    }//GEN-LAST:event_chkAddCheeseActionPerformed

    private void chkAddBaconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAddBaconActionPerformed
        // Add Bacon cost
        updateItemPrice();
    }//GEN-LAST:event_chkAddBaconActionPerformed

    private void chkMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMealActionPerformed
        // Add Meal cost
        updateItemPrice();
    }//GEN-LAST:event_chkMealActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BurgerBUs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BurgerBUs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BurgerBUs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BurgerBUs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BurgerBUs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgBurgers;
    private javax.swing.JCheckBox chkAddBacon;
    private javax.swing.JCheckBox chkAddCheese;
    private javax.swing.JCheckBox chkMeal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuBar jmbMainMenu;
    private javax.swing.JLabel lblItemPrice;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblOrderTotal;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JMenuItem mniAddToOrder;
    private javax.swing.JMenuItem mniClear;
    private javax.swing.JMenuItem mniExit;
    private javax.swing.JMenuItem mniNewOrder;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenu mnuOrder;
    private javax.swing.JRadioButton rdoDoubleBurger;
    private javax.swing.JRadioButton rdoSingleBurger;
    private javax.swing.JTextArea txaOutput;
    private javax.swing.JTextField txtItemPrice;
    private javax.swing.JTextField txtOrderTotal;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    private void updateItemPrice() {
        // Update the item price based on the selection
        double itemPrice = 0.0;
        
        // Check if any of Burgers are selected
        if(!rdoSingleBurger.isSelected() && !rdoDoubleBurger.isSelected())
           JOptionPane.showMessageDialog(this, "Error! Please select Single or Double Burger"); 
        
        // Set the itemPrice for Single and Double Burger
        if(rdoSingleBurger.isSelected())
            itemPrice = 3.5;
        else
            itemPrice = 4.75;
        
        // check for cheese
        if(chkAddCheese.isSelected())
            itemPrice += 0.5;
        
        if(chkAddBacon.isSelected())
            itemPrice += 1.25;
        
        if(chkMeal.isSelected())
            itemPrice += 4.0;
        
        // show teh item price
        DecimalFormat fmt = new DecimalFormat("0.00");
        
        txtItemPrice.setText(fmt.format(itemPrice));
    }
}
